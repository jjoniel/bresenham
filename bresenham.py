"""
Triangle Drawing with Bresenham

Created by Joniel Augustine Jerome
09/09/2020

The program uses Bresenham's line algorithm to draw a triangle from three 
randomly plotted points. The Python Imaging Library (PIL) is used to draw
the lines and return the output as an image.
"""

from PIL import Image
from random import random

# A blank image is initialized
img = Image.new( 'RGB' , (400,400) , (0,0,0) )

# Three random points are generated
x1, y1 = random(), random()
x2, y2 = random(), random()
x3, y3 = random(), random()


def i(x, xmin = 0.0, xmax = 1.0, vmin = 0, vmax = 400):
    # This function maps values on one range to a different range.
    # In this case, values on the range 0 to 1 generated by random
    # are mapped to the range of the bounds of the image
    return int(vmin + (x - xmin) * (vmax - vmin) / (xmax - xmin))

   
def bresenham(px1, py1, px2, py2):
    # This function peformns the line drawing algorithm.
    # The algorithm behaves differently for each of 8 octants, based 
    # on the relative position and slope between the points
    if(px1 < px2 and py1 < py2):
        y = py1
        ay = py1
        dx = px2 - px1
        dy = py2 - py1
        slope = dy/dx
        if(slope<1):
            for x in range(px1, px2+1):
                if(abs(y-(ay+slope)) < abs((y+1)-(ay+slope))):
                    img.putpixel((x,y),(255, 0, 255))
                else:
                    y += 1
                    img.putpixel((x,y),(255, 0, 255))
                ay += slope
        else:
            x = px1
            ax = px1
            dx = px2 - px1
            dy = py2 - py1
            slope = dx/dy
            for y in range(py1, py2+1):
                if(abs(x-(ax+slope)) < abs((x+1)-(ax+slope))):
                    img.putpixel((x,y),(255, 0, 255))
                else:
                    x += 1
                    img.putpixel((x,y),(255, 0, 255))
                ax += slope
            
            
    elif(px1 > px2 and py1 > py2):
        px1, px2 = px2, px1
        py1, py2 = py2, py1
        y = py1
        ay = py1
        dx = px2 - px1
        dy = py2 - py1
        slope = dy/dx
        if(slope<1):
            for x in range(px1, px2+1):
                if(abs(y-(ay+slope)) < abs((y+1)-(ay+slope))):
                    img.putpixel((x,y),(255, 0, 255))
                else:
                    y += 1
                    img.putpixel((x,y),(255, 0, 255))
                ay += slope
        else:
            x = px1
            ax = px1
            dx = px2 - px1
            dy = py2 - py1
            slope = dx/dy
            for y in range(py1, py2+1):
                if(abs(x-(ax+slope)) < abs((x+1)-(ax+slope))):
                    img.putpixel((x,y),(255, 0, 255))
                else:
                    x += 1
                    img.putpixel((x,y),(255, 0, 255))
                ax += slope
    elif(px1 < px2 and py1 > py2):
        y = py1
        ay = py1
        dx = px2 - px1
        dy = py2 - py1
        slope = dy/dx
        slope = abs(slope)
        if(slope<1):
            for x in range(px1, px2+1):
                if(abs(y-(ay-slope)) < abs((y-1)-(ay-slope))):
                    img.putpixel((x,y),(255, 0, 255))
                else:
                    y -= 1
                    img.putpixel((x,y),(255, 0, 255))
                ay -= slope
        else:
            x = px2
            ax = px2
            dx = px2 - px1
            dy = py2 - py1
            slope = dx/dy
            slope = abs(slope)
            for y in range(py2, py1+1):
                if(abs(x-(ax-slope)) < abs((x-1)-(ax-slope))):
                    img.putpixel((x,y),(255, 0, 255))
                else:
                    x -= 1
                    img.putpixel((x,y),(255, 0, 255))
                ax -= slope
    else:
        px1, px2 = px2, px1
        py1, py2 = py2, py1
        y = py1
        ay = py1
        dx = px2 - px1
        dy = py2 - py1
        slope = dy/dx
        slope = abs(slope)
        if(slope<1):
            for x in range(px1, px2+1):
                if(abs(y-(ay-slope)) < abs((y-1)-(ay-slope))):
                    img.putpixel((x,y),(255, 0, 255))
                else:
                    y -= 1
                    img.putpixel((x,y),(255, 0, 255))
                ay -= slope
        else:
            x = px2
            ax = px2
            dx = px2 - px1
            dy = py2 - py1
            slope = dx/dy
            slope = abs(slope)
            for y in range(py2, py1+1):
                if(abs(x-(ax-slope)) < abs((x-1)-(ax-slope))):
                    img.putpixel((x,y),(255, 0, 255))
                else:
                    x -= 1
                    img.putpixel((x,y),(255, 0, 255))
                ax -= slope
        
# Lines are drawn between the three points        
bresenham(i(x1), i(y1), i(x2), i(y2))
bresenham(i(x2), i(y2), i(x3), i(y3))
bresenham(i(x3), i(y3), i(x1), i(y1))

# The image is saved to a file
img.save('triangle.png')
print('done')
